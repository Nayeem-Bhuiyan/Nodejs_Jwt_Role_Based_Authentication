{"ast":null,"code":"import { HttpEventType, HttpResponse } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/file/file-control.service\";\nimport * as i2 from \"@angular/common\";\n\nconst _c0 = function (a0) {\n  return {\n    width: a0\n  };\n};\n\nfunction FileUploadComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12)(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 13)(4, \"div\", 14);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const progressInfo_r4 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(progressInfo_r4.fileName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(4, _c0, progressInfo_r4.value + \"%\"));\n    i0.ɵɵattribute(\"aria-valuenow\", progressInfo_r4.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", progressInfo_r4.value, \"% \");\n  }\n}\n\nfunction FileUploadComponent_img_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 15);\n  }\n\n  if (rf & 2) {\n    const preview_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"src\", preview_r5, i0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction FileUploadComponent_div_10_ul_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\")(1, \"li\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const msg_r7 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(msg_r7);\n  }\n}\n\nfunction FileUploadComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtemplate(1, FileUploadComponent_div_10_ul_1_Template, 3, 1, \"ul\", 17);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.message);\n  }\n}\n\nfunction FileUploadComponent_ul_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 18)(1, \"li\", 19)(2, \"p\")(3, \"a\", 20);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(5, \"img\", 21);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const image_r9 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate(\"href\", image_r9.url, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(image_r9.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"src\", image_r9.url, i0.ɵɵsanitizeUrl);\n    i0.ɵɵpropertyInterpolate(\"alt\", image_r9.name);\n  }\n}\n\nexport class FileUploadComponent {\n  constructor(_fileService) {\n    this._fileService = _fileService;\n    this.progressInfos = [];\n    this.message = [];\n    this.previews = [];\n  }\n\n  ngOnInit() {\n    this.imageInfos = this._fileService.getFiles();\n  }\n\n  selectFiles(event) {\n    this.message = [];\n    this.progressInfos = [];\n    this.selectedFiles = event.target.files;\n    this.previews = [];\n\n    if (this.selectedFiles && this.selectedFiles[0]) {\n      const numberOfFiles = this.selectedFiles.length;\n\n      for (let i = 0; i < numberOfFiles; i++) {\n        const reader = new FileReader();\n\n        reader.onload = e => {\n          console.log(e.target.result);\n          this.previews.push(e.target.result);\n        };\n\n        reader.readAsDataURL(this.selectedFiles[i]);\n      }\n    }\n  }\n\n  upload(idx, file) {\n    this.progressInfos[idx] = {\n      value: 0,\n      fileName: file.name\n    };\n\n    if (file) {\n      this._fileService.upload(file).subscribe({\n        next: event => {\n          if (event.type === HttpEventType.UploadProgress) {\n            this.progressInfos[idx].value = Math.round(100 * event.loaded / event.total);\n          } else if (event instanceof HttpResponse) {\n            const msg = 'Uploaded the file successfully: ' + file.name;\n            this.message.push(msg);\n            this.imageInfos = this._fileService.getFiles();\n          }\n        },\n        error: err => {\n          this.progressInfos[idx].value = 0;\n          const msg = 'Could not upload the file: ' + file.name;\n          this.message.push(msg);\n        }\n      });\n    }\n  }\n\n  uploadFiles() {\n    this.message = [];\n\n    if (this.selectedFiles) {\n      for (let i = 0; i < this.selectedFiles.length; i++) {\n        this.upload(i, this.selectedFiles[i]);\n      }\n    }\n  }\n\n}\n\nFileUploadComponent.ɵfac = function FileUploadComponent_Factory(t) {\n  return new (t || FileUploadComponent)(i0.ɵɵdirectiveInject(i1.FileControlService));\n};\n\nFileUploadComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FileUploadComponent,\n  selectors: [[\"app-file-upload\"]],\n  decls: 16,\n  vars: 7,\n  consts: [[\"class\", \"mb-2\", 4, \"ngFor\", \"ngForOf\"], [1, \"row\"], [1, \"col-8\"], [1, \"btn\", \"btn-default\", \"p-0\"], [\"type\", \"file\", \"accept\", \"image/*\", \"multiple\", \"\", 3, \"change\"], [1, \"col-4\"], [1, \"btn\", \"btn-success\", \"btn-sm\", 3, \"disabled\", \"click\"], [\"class\", \"preview\", 3, \"src\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"alert alert-secondary my-3\", \"role\", \"alert\", 4, \"ngIf\"], [1, \"card\", \"mt-3\"], [1, \"card-header\"], [\"class\", \"list-group list-group-flush\", 4, \"ngFor\", \"ngForOf\"], [1, \"mb-2\"], [1, \"progress\"], [\"role\", \"progressbar\", \"aria-valuemin\", \"0\", \"aria-valuemax\", \"100\", 1, \"progress-bar\", \"progress-bar-info\", 3, \"ngStyle\"], [1, \"preview\", 3, \"src\"], [\"role\", \"alert\", 1, \"alert\", \"alert-secondary\", \"my-3\"], [4, \"ngFor\", \"ngForOf\"], [1, \"list-group\", \"list-group-flush\"], [1, \"list-group-item\"], [3, \"href\"], [\"height\", \"80px\", 3, \"src\", \"alt\"]],\n  template: function FileUploadComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, FileUploadComponent_div_0_Template, 6, 6, \"div\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"div\", 2)(3, \"label\", 3)(4, \"input\", 4);\n      i0.ɵɵlistener(\"change\", function FileUploadComponent_Template_input_change_4_listener($event) {\n        return ctx.selectFiles($event);\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(5, \"div\", 5)(6, \"button\", 6);\n      i0.ɵɵlistener(\"click\", function FileUploadComponent_Template_button_click_6_listener() {\n        return ctx.uploadFiles();\n      });\n      i0.ɵɵtext(7, \" Upload \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(8, \"div\");\n      i0.ɵɵtemplate(9, FileUploadComponent_img_9_Template, 1, 1, \"img\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(10, FileUploadComponent_div_10_Template, 2, 1, \"div\", 8);\n      i0.ɵɵelementStart(11, \"div\", 9)(12, \"div\", 10);\n      i0.ɵɵtext(13, \"List of Images\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(14, FileUploadComponent_ul_14_Template, 6, 4, \"ul\", 11);\n      i0.ɵɵpipe(15, \"async\");\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.progressInfos);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"disabled\", !ctx.selectedFiles);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.previews);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.message.length);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(15, 5, ctx.imageInfos));\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i2.NgStyle, i2.AsyncPipe],\n  styles: [\".preview[_ngcontent-%COMP%] {\\r\\n    max-width: 200px;\\r\\n    max-height: 200px;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpbGUtdXBsb2FkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxnQkFBZ0I7SUFDaEIsaUJBQWlCO0VBQ25CIiwiZmlsZSI6ImZpbGUtdXBsb2FkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucHJldmlldyB7XHJcbiAgICBtYXgtd2lkdGg6IDIwMHB4O1xyXG4gICAgbWF4LWhlaWdodDogMjAwcHg7XHJcbiAgfSJdfQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["HttpEventType","HttpResponse","i0","FileUploadComponent","constructor","_fileService","ngOnInit","imageInfos","getFiles","selectFiles","event","message","progressInfos","selectedFiles","target","files","previews","numberOfFiles","length","i","reader","FileReader","onload","e","console","log","result","push","readAsDataURL","upload","idx","file","value","fileName","name","subscribe","next","type","UploadProgress","Math","round","loaded","total","msg","error","err","uploadFiles","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["E:\\TestProject\\Nodejs\\04-08-2022\\Nodejs_Jwt_Role_Based_Authentication\\Nodejs_Jwt_Role_Based_Authentication\\client\\src\\app\\components\\file-upload\\file-upload.component.ts","E:\\TestProject\\Nodejs\\04-08-2022\\Nodejs_Jwt_Role_Based_Authentication\\Nodejs_Jwt_Role_Based_Authentication\\client\\src\\app\\components\\file-upload\\file-upload.component.html"],"sourcesContent":["import { HttpEventType, HttpResponse } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { FileControlService } from 'src/app/services/file/file-control.service';\n\n@Component({\n  selector: 'app-file-upload',\n  templateUrl: './file-upload.component.html',\n  styleUrls: ['./file-upload.component.css']\n})\nexport class FileUploadComponent implements OnInit {\n\n  selectedFiles?: FileList;\n  progressInfos: any[] = [];\n  message: string[] = [];\n\n  previews: string[] = [];\n  imageInfos?: Observable<any>;\n\n  constructor(private _fileService: FileControlService) { }\n\n  ngOnInit(): void {\n    this.imageInfos = this._fileService.getFiles();\n  }\n\n  selectFiles(event: any): void {\n    this.message = [];\n    this.progressInfos = [];\n    this.selectedFiles = event.target.files;\n\n    this.previews = [];\n    if (this.selectedFiles && this.selectedFiles[0]) {\n      const numberOfFiles = this.selectedFiles.length;\n      for (let i = 0; i < numberOfFiles; i++) {\n        const reader = new FileReader();\n\n        reader.onload = (e: any) => {\n          console.log(e.target.result);\n          this.previews.push(e.target.result);\n        };\n\n        reader.readAsDataURL(this.selectedFiles[i]);\n      }\n    }\n  }\n\n  upload(idx: number, file: File): void {\n    this.progressInfos[idx] = { value: 0, fileName: file.name };\n\n    if (file) {\n      this._fileService.upload(file).subscribe({\n        next: (event: any) => {\n          if (event.type === HttpEventType.UploadProgress) {\n            this.progressInfos[idx].value = Math.round(100 * event.loaded / event.total);\n          } else if (event instanceof HttpResponse) {\n            const msg = 'Uploaded the file successfully: ' + file.name;\n            this.message.push(msg);\n            this.imageInfos = this._fileService.getFiles();\n          }\n        },\n        error: (err: any) => {\n          this.progressInfos[idx].value = 0;\n          const msg = 'Could not upload the file: ' + file.name;\n          this.message.push(msg);\n        }});\n    }\n  }\n\n  uploadFiles(): void {\n    this.message = [];\n\n    if (this.selectedFiles) {\n      for (let i = 0; i < this.selectedFiles.length; i++) {\n        this.upload(i, this.selectedFiles[i]);\n      }\n    }\n  }\n\n}\n","<div *ngFor=\"let progressInfo of progressInfos\" class=\"mb-2\">\n    <span>{{ progressInfo.fileName }}</span>\n    <div class=\"progress\">\n      <div\n        class=\"progress-bar progress-bar-info\"\n        role=\"progressbar\"\n        attr.aria-valuenow=\"{{ progressInfo.value }}\"\n        aria-valuemin=\"0\"\n        aria-valuemax=\"100\"\n        [ngStyle]=\"{ width: progressInfo.value + '%' }\"\n      >\n        {{ progressInfo.value }}%\n      </div>\n    </div>\n  </div>\n  \n  <div class=\"row\">\n    <div class=\"col-8\">\n      <label class=\"btn btn-default p-0\">\n        <input type=\"file\" accept=\"image/*\" multiple (change)=\"selectFiles($event)\" />\n      </label>\n    </div>\n  \n    <div class=\"col-4\">\n      <button\n        class=\"btn btn-success btn-sm\"\n        [disabled]=\"!selectedFiles\"\n        (click)=\"uploadFiles()\"\n      >\n        Upload\n      </button>\n    </div>\n  </div>\n  \n  <div>\n    <img *ngFor='let preview of previews' [src]=\"preview\" class=\"preview\">\n  </div>\n  \n  <div *ngIf=\"message.length\" class=\"alert alert-secondary my-3\" role=\"alert\">\n    <ul *ngFor=\"let msg of message; let i = index\">\n      <li>{{ msg }}</li>\n    </ul>\n  </div>\n  \n  <div class=\"card mt-3\">\n    <div class=\"card-header\">List of Images</div>\n    <ul\n      class=\"list-group list-group-flush\"\n      *ngFor=\"let image of imageInfos | async\"\n    >\n      <li class=\"list-group-item\">\n        <p><a href=\"{{ image.url }}\">{{ image.name }}</a></p>\n        <img src=\"{{ image.url }}\" alt=\"{{ image.name }}\" height=\"80px\" />\n      </li>\n    </ul>\n  </div>\n"]},"metadata":{},"sourceType":"module"}